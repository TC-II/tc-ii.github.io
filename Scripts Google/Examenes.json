{"files":[{"id":"917bd6f5-6435-4601-b374-4f45321ebc10","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Argentina/Buenos_Aires\",\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"Drive\",\n        \"serviceId\": \"drive\",\n        \"version\": \"v2\"\n      }\n    ]\n  },\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"e5fb4740-aa2a-42dd-a6bb-48892cc79c04","name":"Code","type":"server_js","source":"/** Web App que devuelve JSON con PDFs de una carpeta de Drive.\n *  URL: https://script.google.com/macros/s/DEPLOY_ID/exec?folderId\u003d...\u0026onlyPublic\u003dfalse\n */\nfunction doGet(e) {\n  var folderId \u003d (e.parameter.folderId || \u0027\u0027).trim();\n  var onlyPublic \u003d String(e.parameter.onlyPublic || \u0027false\u0027).toLowerCase() \u003d\u003d\u003d \u0027true\u0027;\n  if (!folderId) {\n    return ContentService.createTextOutput(JSON.stringify({error:\u0027missing folderId\u0027}))\n      .setMimeType(ContentService.MimeType.JSON);\n  }\n\n  var cache \u003d CacheService.getScriptCache();\n  var cacheKey \u003d \u0027exams_\u0027 + folderId + \u0027_op\u0027 + (onlyPublic?1:0);\n  var cached \u003d cache.get(cacheKey);\n  if (cached) {\n    return ContentService.createTextOutput(cached).setMimeType(ContentService.MimeType.JSON);\n  }\n\n  // Usamos Advanced Drive Service (activar en Services y en Cloud Console)\n  var q \u003d \"\u0027\" + folderId + \"\u0027 in parents and mimeType\u003d\u0027application/pdf\u0027 and trashed\u003dfalse\";\n  var params \u003d { q: q, fields: \"files(id,name,modifiedTime)\", orderBy: \"modifiedTime desc\", pageSize: 200 };\n\n  var files \u003d [];\n  var resp \u003d Drive.Files.list(params);\n  files \u003d files.concat(resp.items ? resp.items.map(function(it){\n    return { id: it.id, name: it.title || it.name, modifiedTime: it.modifiedDate || it.modifiedTime };\n  }) : []);\n  console.log(files)\n\n  // paginación si hiciera falta (v2 usa nextPageToken)\n  while (resp.nextPageToken) {\n    params.pageToken \u003d resp.nextPageToken;\n    resp \u003d Drive.Files.list(params);\n    files \u003d files.concat(resp.items ? resp.items.map(function(it){\n      return { id: it.id, name: it.title || it.name, modifiedTime: it.modifiedDate || it.modifiedTime };\n    }) : []);\n  }\n\n  // Filtrado opcional: solo públicos\n  if (onlyPublic) {\n    files \u003d files.filter(function(f){\n      try {\n        var perms \u003d Drive.Permissions.list(f.id).items || [];\n        return perms.some(function(p){ return p.type \u003d\u003d\u003d \u0027anyone\u0027 \u0026\u0026 (p.role \u003d\u003d\u003d \u0027reader\u0027 || p.role \u003d\u003d\u003d \u0027writer\u0027 || p.role \u003d\u003d\u003d \u0027owner\u0027); });\n      } catch(err) { return false; }\n    });\n  }\n\n  var out \u003d JSON.stringify({ files: files });\n  cache.put(cacheKey, out, 600); // 600s \u003d 10 min\n  return ContentService.createTextOutput(out).setMimeType(ContentService.MimeType.JSON);\n}"}]}